[package]
name = "refimage"
version = "1.0.0-pre2"
edition = "2021"
resolver = "2"

license = "MIT OR Apache-2.0"
description = "Imaging library. Provides image storage using CoW-like structures to avoid re-allocation in image-aquisition scenarios. Supports rich metadata and serdes."
authors = ["Sunip K. Mukherjee <sunipkmukherjee@gmail.com>"]
readme = "README.MD"

# crates.io metadata
documentation = "https://docs.rs/refimage"
repository = "https://github.com/sunipkm/refimage"
homepage = "https://github.com/sunipkm/refimage"
categories = ["multimedia::images", "multimedia::encoding"]

include = [
    "/LICENSE-APACHE",
    "/LICENSE-MIT",
    "/README.MD",
    "/CHANGELOG.MD",
    "/src/",
    "/examples/",
    "/benches/",
]

[dependencies]
# required
bytemuck = { version = "1.16", features = [
    "aarch64_simd",
    "wasm_simd",
    "extern_crate_alloc",
] }
chrono = { version = "0.4", default-features = false, features = ["std"] }
crc32fast = { version = "1.4" }
fitsio = { version = "0.21", optional = true }
image = { version = "0.25", optional = true, default-features = false }
itertools = "0.13"
num-traits = "0.2"
rayon = { version = "1.10", optional = true }
serde = { version = "1.0", features = ["derive"] }
thiserror = "1.0"

[dev-dependencies]
bincode = "1.3"
color-backtrace = "0.6"
paste = "1.0"
rand = "0.8"
serde-generate = "0.26"
serde_json = "1.0"
serde-reflection = "0.4"

[features]
default = ["rayon"]
fitsio = ["dep:fitsio"]
full = ["default", "fitsio", "image"]
image = ["dep:image"]
rayon = ["dep:rayon"]

[package.metadata.docs.rs]
# document all features
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

[[bench]]
path = "benches/cast_u8.rs"
name = "cast_u8"

[[example]]
name = "test_debayer"
path = "examples/test_debayer.rs"

[[example]]
name = "test_flow"
path = "examples/test_flow.rs"
required-features = ["full"]
